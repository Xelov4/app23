generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tool {
  id                String              @id @default(cuid())
  name              String
  slug              String              @unique
  description       String
  logoUrl           String?
  websiteUrl        String
  features          String              // Changed from String[] to String - will store JSON
  pricingType       PricingType
  pricingDetails    String?
  rating            Float?
  reviewCount       Int?
  httpCode          Int?                // Code HTTP retourné lors de la vérification du site
  isActive          Boolean             @default(true)  // Indique si l'outil est actif (ON) ou inactif (OFF)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  CategoriesOnTools CategoriesOnTools[]
  Review            Review[]
  TagsOnTools       TagsOnTools[]
  UseCasesOnTools   UseCasesOnTools[]
}

model Category {
  id                String              @id @default(cuid())
  name              String
  slug              String              @unique
  description       String
  imageUrl          String?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  CategoriesOnTools CategoriesOnTools[]
}

model Tag {
  id          String        @id @default(cuid())
  name        String
  slug        String        @unique
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  TagsOnTools TagsOnTools[]
}

model CategoriesOnTools {
  toolId     String
  categoryId String
  Category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  Tool       Tool     @relation(fields: [toolId], references: [id], onDelete: Cascade)

  @@id([toolId, categoryId])
  @@index([categoryId])
  @@index([toolId])
}

model Review {
  id        String   @id
  title     String
  content   String
  rating    Float
  userEmail String
  userName  String
  toolId    String
  createdAt DateTime @default(now())
  updatedAt DateTime
  Tool      Tool     @relation(fields: [toolId], references: [id], onDelete: Cascade)

  @@index([toolId])
}

model TagsOnTools {
  toolId String
  tagId  String
  Tag    Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)
  Tool   Tool   @relation(fields: [toolId], references: [id], onDelete: Cascade)

  @@id([toolId, tagId])
  @@index([tagId])
  @@index([toolId])
}

model UseCase {
  id              String            @id
  name            String
  slug            String            @unique
  description     String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime
  UseCasesOnTools UseCasesOnTools[]
}

model UseCasesOnTools {
  toolId    String
  useCaseId String
  Tool      Tool    @relation(fields: [toolId], references: [id], onDelete: Cascade)
  UseCase   UseCase @relation(fields: [useCaseId], references: [id], onDelete: Cascade)

  @@id([toolId, useCaseId])
  @@index([toolId])
  @@index([useCaseId])
}

enum Role {
  USER
  ADMIN
}

enum PricingType {
  FREE
  FREEMIUM
  PAID
  CONTACT
}
