generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tool {
  id                  String              @id @default(cuid())
  name                String
  slug                String              @unique
  description         String
  detailedDescription String?
  logoUrl             String?
  websiteUrl          String
  features            String
  pricingType         String
  pricingDetails      String?
  rating              Float?
  reviewCount         Int?
  httpCode            Int?
  twitterUrl          String?
  instagramUrl        String?
  facebookUrl         String?
  linkedinUrl         String?
  githubUrl           String?
  youtubeUrl          String?
  appStoreUrl         String?
  playStoreUrl        String?
  isActive            Boolean             @default(true)
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  httpChain           String?
  affiliateUrl        String?
  hasAffiliateProgram Boolean             @default(false)
  CategoriesOnTools   CategoriesOnTools[]
  FeaturesOnTools     FeaturesOnTools[]
  Review              Review[]
  TagsOnTools         TagsOnTools[]
  ToolsOnSearches     ToolsOnSearches[]
  UseCasesOnTools     UseCasesOnTools[]
  UserTypesOnTools    UserTypesOnTools[]
}

model Category {
  id                String              @id @default(cuid())
  name              String
  slug              String              @unique
  description       String
  imageUrl          String?
  seoTitle          String?
  metaDescription   String?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  iconName          String?
  CategoriesOnTools CategoriesOnTools[]
}

model Tag {
  id              String        @id @default(cuid())
  name            String
  slug            String        @unique
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  metaDescription String?
  seoTitle        String?
  TagsOnTools     TagsOnTools[]
}

model CategoriesOnTools {
  toolId     String
  categoryId String
  Category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  Tool       Tool     @relation(fields: [toolId], references: [id], onDelete: Cascade)

  @@id([toolId, categoryId])
  @@index([categoryId])
  @@index([toolId])
}

model Review {
  id        String   @id
  title     String
  content   String
  rating    Float
  userEmail String
  userName  String
  toolId    String
  createdAt DateTime @default(now())
  updatedAt DateTime
  Tool      Tool     @relation(fields: [toolId], references: [id], onDelete: Cascade)

  @@index([toolId])
}

model TagsOnTools {
  toolId String
  tagId  String
  Tag    Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)
  Tool   Tool   @relation(fields: [toolId], references: [id], onDelete: Cascade)

  @@id([toolId, tagId])
  @@index([tagId])
  @@index([toolId])
}

model UseCase {
  id              String            @id
  name            String
  slug            String            @unique
  description     String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime
  UseCasesOnTools UseCasesOnTools[]
}

model UseCasesOnTools {
  toolId    String
  useCaseId String
  Tool      Tool    @relation(fields: [toolId], references: [id], onDelete: Cascade)
  UseCase   UseCase @relation(fields: [useCaseId], references: [id], onDelete: Cascade)

  @@id([toolId, useCaseId])
  @@index([toolId])
  @@index([useCaseId])
}

model Feature {
  id              String            @id @default(cuid())
  name            String
  slug            String            @unique
  description     String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  metaDescription String?
  seoTitle        String?
  FeaturesOnTools FeaturesOnTools[]
}

model FeaturesOnTools {
  toolId    String
  featureId String
  Feature   Feature @relation(fields: [featureId], references: [id], onDelete: Cascade)
  Tool      Tool    @relation(fields: [toolId], references: [id], onDelete: Cascade)

  @@id([toolId, featureId])
  @@index([featureId])
  @@index([toolId])
}

model UserType {
  id               String             @id @default(cuid())
  name             String
  slug             String             @unique
  description      String?
  seoTitle         String?
  metaDescription  String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  UserTypesOnTools UserTypesOnTools[]
}

model UserTypesOnTools {
  toolId     String
  userTypeId String
  UserType   UserType @relation(fields: [userTypeId], references: [id], onDelete: Cascade)
  Tool       Tool     @relation(fields: [toolId], references: [id], onDelete: Cascade)

  @@id([toolId, userTypeId])
  @@index([userTypeId])
  @@index([toolId])
}

model Search {
  id              String            @id @default(cuid())
  keyword         String            @unique
  slug            String            @unique
  description     String?
  seoTitle        String?
  metaDescription String?
  isActive        Boolean           @default(false)
  searchCount     Int               @default(0)
  lastSearchedAt  DateTime?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  SearchData      SearchData[]
  ToolsOnSearches ToolsOnSearches[]
}

model SearchData {
  id             String   @id @default(cuid())
  searchId       String
  searchTerm     String
  count          Int      @default(1)
  lastSearchedAt DateTime
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  Search         Search   @relation(fields: [searchId], references: [id], onDelete: Cascade)

  @@index([searchId])
}

model ToolsOnSearches {
  toolId    String
  searchId  String
  relevance Float    @default(1.0)
  createdAt DateTime @default(now())
  Search    Search   @relation(fields: [searchId], references: [id], onDelete: Cascade)
  Tool      Tool     @relation(fields: [toolId], references: [id], onDelete: Cascade)

  @@id([toolId, searchId])
  @@index([searchId])
  @@index([toolId])
}
